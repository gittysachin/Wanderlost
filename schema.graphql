### This file was generated by Nexus Schema
### Do not make changes to this file directly

type CartItem {
  id: ID!
  item: Item
  quantity: Int!
  user: User!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type Item {
  description: String!
  id: ID!
  image: String
  largeImage: String
  price: Int!
  title: String!
  user: User!
  userId: String!
}

type ItemConnection {
  hasMore: Boolean!
  items: [Item]!
  total: Int!
}

input ItemsInput {
  description: String
  title: String
}

type Mutation {
  addToCart(id: ID!): CartItem
  checkout(token: String!): Order!
  createItem(
    description: String!
    image: String
    largeImage: String
    price: Int!
    title: String!
  ): Item!
  deleteCartItem(id: ID!): CartItem
  deleteItem(id: ID!): Item
  requestReset(email: String!): SuccessMessage!
  resetPassword(
    confirmPassword: String!
    password: String!
    resetToken: String!
  ): User!
  signin(email: String!, password: String!): User
  signout: SuccessMessage!
  signup(email: String!, name: String!, password: String!): User!
  updateItem(description: String, id: ID!, price: Int, title: String): Item!
  updatePermissions(permissions: [Permission], userId: ID!): User
  updateUser(id: ID!, name: String!): User!
}

type Order {
  charge: String!
  createdAt: Date!
  id: ID!
  items: [OrderItem!]!
  total: Int!
  updatedAt: Date!
  user: User!
}

type OrderItem {
  description: String!
  id: ID!
  image: String!
  largeImage: String!
  price: Int!
  quantity: Int!
  title: String!
  user: User
}

enum Permission {
  ADMIN
  ITEMCREATE
  ITEMDELETE
  ITEMUPDATE
  PERMISSIONUPDATE
  USER
}

type Query {
  allItems(searchTerm: String): [Item]!
  item(id: ID!): Item
  items(limit: Int, offset: Int): ItemConnection!
  order(id: ID!): Order
  orders: [Order]!
  user: User
  users: [User]
}

type SuccessMessage {
  message: String!
}

type User {
  cart: [CartItem!]!
  email: String!
  id: ID!
  name: String!
  orders: [OrderItem]
  password: String!
  permissions: [Permission]
  resetToken: String
  resetTokenExpiry: Float
}

type UserInput {
  email: String!
  name: String!
  password: String!
}
